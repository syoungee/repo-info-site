const issue_data = [
  {
    url: 'https://api.github.com/repos/expressjs/body-parser/issues/468',
    repository_url: 'https://api.github.com/repos/expressjs/body-parser',
    labels_url: 'https://api.github.com/repos/expressjs/body-parser/issues/468/labels{/name}',
    comments_url: 'https://api.github.com/repos/expressjs/body-parser/issues/468/comments',
    events_url: 'https://api.github.com/repos/expressjs/body-parser/issues/468/events',
    html_url: 'https://github.com/expressjs/body-parser/pull/468',
    id: 1333834663,
    node_id: 'PR_kwDOAO8XDs486s6k',
    number: 468,
    title: 'improve performance of strict',
    user: {
      login: 'stepancar',
      id: 2854910,
      node_id: 'MDQ6VXNlcjI4NTQ5MTA=',
      avatar_url: 'https://avatars.githubusercontent.com/u/2854910?v=4',
      gravatar_id: '',
      url: 'https://api.github.com/users/stepancar',
      html_url: 'https://github.com/stepancar',
      followers_url: 'https://api.github.com/users/stepancar/followers',
      following_url: 'https://api.github.com/users/stepancar/following{/other_user}',
      gists_url: 'https://api.github.com/users/stepancar/gists{/gist_id}',
      starred_url: 'https://api.github.com/users/stepancar/starred{/owner}{/repo}',
      subscriptions_url: 'https://api.github.com/users/stepancar/subscriptions',
      organizations_url: 'https://api.github.com/users/stepancar/orgs',
      repos_url: 'https://api.github.com/users/stepancar/repos',
      events_url: 'https://api.github.com/users/stepancar/events{/privacy}',
      received_events_url: 'https://api.github.com/users/stepancar/received_events',
      type: 'User',
      site_admin: false,
    },
    labels: [
      {
        id: 100714253,
        node_id: 'MDU6TGFiZWwxMDA3MTQyNTM=',
        url: 'https://api.github.com/repos/expressjs/body-parser/labels/pr',
        name: 'pr',
        color: '006b75',
        default: false,
        description: null,
      },
    ],
    state: 'open',
    locked: false,
    assignee: null,
    assignees: [],
    milestone: null,
    comments: 1,
    created_at: '2022-08-09T22:05:32Z',
    updated_at: '2022-08-13T02:57:30Z',
    closed_at: null,
    author_association: 'NONE',
    active_lock_reason: null,
    draft: false,
    pull_request: {
      url: 'https://api.github.com/repos/expressjs/body-parser/pulls/468',
      html_url: 'https://github.com/expressjs/body-parser/pull/468',
      diff_url: 'https://github.com/expressjs/body-parser/pull/468.diff',
      patch_url: 'https://github.com/expressjs/body-parser/pull/468.patch',
      merged_at: null,
    },
    body: "In our project we send long string to our server (2mb). Playing with settings I noticed that, if we set strict false parsing is 5-10 ms faster.\r\nDigging dipper I've found that firstCharacter is slow. \r\nLooking at regexp it seems like it can be simplified.\r\nWe are looking for first character which is not \\x20\\x09\\x0a\\x0d\r\nhttps://regex101.com/r/X2eWbf/1\r\nSearch will be stopped after first match because regexp doesn't use global modifier\r\n\r\nHow I tested it\r\n\r\n```javascript\r\nfunction makeRandomString(length) {\r\n    var result           = '';\r\n    var characters       = '  {ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    var charactersLength = characters.length;\r\n    for ( var i = 0; i < length; i++ ) {\r\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result;\r\n}\r\nvar str = makeRandomString(2000000);\r\nvar OLD_FIRST_CHAR_REGEXP = /^[\\x20\\x09\\x0a\\x0d]*([^\\x20\\x09\\x0a\\x0d])/\r\nvar NEW_FIRST_CHAR_REGEXP = /[^\\x20\\x09\\x0a\\x0d]/\r\n\r\nconsole.time()\r\nconsole.log(OLD_FIRST_CHAR_REGEXP.exec(str)[0])\r\nconsole.timeEnd();\r\nconsole.time();\r\nconsole.log(NEW_FIRST_CHAR_REGEXP.exec(str)[0])\r\nconsole.timeEnd();\r\n```\r\n\r\nTime difference 100-1000 times for 2mb string.\r\n\r\nIf we want to achieve really good performance here we should iterate using javascript. Because probability that first non whitespace character is placed on a first position high it would be fast. ",
    reactions: {
      url: 'https://api.github.com/repos/expressjs/body-parser/issues/468/reactions',
      total_count: 0,
      '+1': 0,
      '-1': 0,
      laugh: 0,
      hooray: 0,
      confused: 0,
      heart: 0,
      rocket: 0,
      eyes: 0,
    },
    timeline_url: 'https://api.github.com/repos/expressjs/body-parser/issues/468/timeline',
    performed_via_github_app: null,
    state_reason: null,
  },
  {
    url: 'https://api.github.com/repos/expressjs/body-parser/issues/467',
    repository_url: 'https://api.github.com/repos/expressjs/body-parser',
    labels_url: 'https://api.github.com/repos/expressjs/body-parser/issues/467/labels{/name}',
    comments_url: 'https://api.github.com/repos/expressjs/body-parser/issues/467/comments',
    events_url: 'https://api.github.com/repos/expressjs/body-parser/issues/467/events',
    html_url: 'https://github.com/expressjs/body-parser/pull/467',
    id: 1304044433,
    node_id: 'PR_kwDOAO8XDs47Xl1A',
    number: 467,
    title: 'fix typo in readme',
    user: {
      login: 'cha147',
      id: 109011481,
      node_id: 'U_kgDOBn9iGQ',
      avatar_url: 'https://avatars.githubusercontent.com/u/109011481?v=4',
      gravatar_id: '',
      url: 'https://api.github.com/users/cha147',
      html_url: 'https://github.com/cha147',
      followers_url: 'https://api.github.com/users/cha147/followers',
      following_url: 'https://api.github.com/users/cha147/following{/other_user}',
      gists_url: 'https://api.github.com/users/cha147/gists{/gist_id}',
      starred_url: 'https://api.github.com/users/cha147/starred{/owner}{/repo}',
      subscriptions_url: 'https://api.github.com/users/cha147/subscriptions',
      organizations_url: 'https://api.github.com/users/cha147/orgs',
      repos_url: 'https://api.github.com/users/cha147/repos',
      events_url: 'https://api.github.com/users/cha147/events{/privacy}',
      received_events_url: 'https://api.github.com/users/cha147/received_events',
      type: 'User',
      site_admin: false,
    },
    labels: [
      {
        id: 98724938,
        node_id: 'MDU6TGFiZWw5ODcyNDkzOA==',
        url: 'https://api.github.com/repos/expressjs/body-parser/labels/docs',
        name: 'docs',
        color: 'd4c5f9',
        default: false,
        description: null,
      },
      {
        id: 100714253,
        node_id: 'MDU6TGFiZWwxMDA3MTQyNTM=',
        url: 'https://api.github.com/repos/expressjs/body-parser/labels/pr',
        name: 'pr',
        color: '006b75',
        default: false,
        description: null,
      },
    ],
    state: 'open',
    locked: false,
    assignee: null,
    assignees: [],
    milestone: null,
    comments: 0,
    created_at: '2022-07-13T23:29:27Z',
    updated_at: '2022-07-13T23:30:42Z',
    closed_at: null,
    author_association: 'NONE',
    active_lock_reason: null,
    draft: false,
    pull_request: {
      url: 'https://api.github.com/repos/expressjs/body-parser/pulls/467',
      html_url: 'https://github.com/expressjs/body-parser/pull/467',
      diff_url: 'https://github.com/expressjs/body-parser/pull/467.diff',
      patch_url: 'https://github.com/expressjs/body-parser/pull/467.patch',
      merged_at: null,
    },
    body: 'Fix a typo in README',
    reactions: {
      url: 'https://api.github.com/repos/expressjs/body-parser/issues/467/reactions',
      total_count: 1,
      '+1': 1,
      '-1': 0,
      laugh: 0,
      hooray: 0,
      confused: 0,
      heart: 0,
      rocket: 0,
      eyes: 0,
    },
    timeline_url: 'https://api.github.com/repos/expressjs/body-parser/issues/467/timeline',
    performed_via_github_app: null,
    state_reason: null,
  },
  {
    url: 'https://api.github.com/repos/expressjs/body-parser/issues/453',
    repository_url: 'https://api.github.com/repos/expressjs/body-parser',
    labels_url: 'https://api.github.com/repos/expressjs/body-parser/issues/453/labels{/name}',
    comments_url: 'https://api.github.com/repos/expressjs/body-parser/issues/453/comments',
    events_url: 'https://api.github.com/repos/expressjs/body-parser/issues/453/events',
    html_url: 'https://github.com/expressjs/body-parser/issues/453',
    id: 1080963118,
    node_id: 'I_kwDOAO8XDs5AbjAu',
    number: 453,
    title: 'Pass custom parameters to `qs`',
    user: {
      login: 'AllanJard',
      id: 84905443,
      node_id: 'MDQ6VXNlcjg0OTA1NDQz',
      avatar_url: 'https://avatars.githubusercontent.com/u/84905443?v=4',
      gravatar_id: '',
      url: 'https://api.github.com/users/AllanJard',
      html_url: 'https://github.com/AllanJard',
      followers_url: 'https://api.github.com/users/AllanJard/followers',
      following_url: 'https://api.github.com/users/AllanJard/following{/other_user}',
      gists_url: 'https://api.github.com/users/AllanJard/gists{/gist_id}',
      starred_url: 'https://api.github.com/users/AllanJard/starred{/owner}{/repo}',
      subscriptions_url: 'https://api.github.com/users/AllanJard/subscriptions',
      organizations_url: 'https://api.github.com/users/AllanJard/orgs',
      repos_url: 'https://api.github.com/users/AllanJard/repos',
      events_url: 'https://api.github.com/users/AllanJard/events{/privacy}',
      received_events_url: 'https://api.github.com/users/AllanJard/received_events',
      type: 'User',
      site_admin: false,
    },
    labels: [
      {
        id: 73534987,
        node_id: 'MDU6TGFiZWw3MzUzNDk4Nw==',
        url: 'https://api.github.com/repos/expressjs/body-parser/labels/enhancement',
        name: 'enhancement',
        color: '84b6eb',
        default: true,
        description: null,
      },
      {
        id: 120315769,
        node_id: 'MDU6TGFiZWwxMjAzMTU3Njk=',
        url: 'https://api.github.com/repos/expressjs/body-parser/labels/discuss',
        name: 'discuss',
        color: '02d7e1',
        default: false,
        description: null,
      },
    ],
    state: 'open',
    locked: false,
    assignee: null,
    assignees: [],
    milestone: null,
    comments: 1,
    created_at: '2021-12-15T12:09:36Z',
    updated_at: '2022-03-31T06:26:31Z',
    closed_at: null,
    author_association: 'NONE',
    active_lock_reason: null,
    body: "This is really the same as #98 but that issue has been locked. The original rational for not adding the ability to pass configuration parameters to `qs` was that package was abandoned. That is no longer the case and `qs` is now actively maintained. As such, I wonder if we might be able to revisit the original request and decision as that ability would be really useful.\r\n\r\nAlso released is #203 requesting support for custom parsers. That issue is perhaps less important since `qs` is maintained again?\r\n\r\nThe reason I'd like to see this, is that if I submit something like `l-2[].dp-1` then the parameter in `req.body` is _always_ `l-2` regardless of what follows the `[].` (I think the same applies with just a `.`) due to the lack of support being able to set `allowDots` in `qs`.",
    reactions: {
      url: 'https://api.github.com/repos/expressjs/body-parser/issues/453/reactions',
      total_count: 2,
      '+1': 0,
      '-1': 0,
      laugh: 0,
      hooray: 0,
      confused: 0,
      heart: 2,
      rocket: 0,
      eyes: 0,
    },
    timeline_url: 'https://api.github.com/repos/expressjs/body-parser/issues/453/timeline',
    performed_via_github_app: null,
    state_reason: null,
  },
];

export default issue_data;
